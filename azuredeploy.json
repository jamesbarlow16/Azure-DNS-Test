{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        },
        "adminUser": {
            "type": "string",
            "metadata": {
                "description": "Admin username for virtual machines"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for virtual machines"
            }
        },
        "StorageAcc": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account to use for boot diag."
            }
        }

    },
    "variables": {
        "vNet_Name": "vne-dns-deligation",
        "vnet_addressSpace": "10.0.0.0/16",
        "Subnet_ad_Name": "AD-Subnet",
        "Subnet_ad_addressRange": "10.0.0.0/24",
        "vmSize": "Standard_DS1_v2",
        "VM_Primary_DC_VM_Name": "adc01",
        "VM_Backup_DC_VM_Name": "adc02",
        "domain_Name": "jabtest.local",
        "adPDCModulesURL":"[uri(parameters('_artifactsLocation'), concat('DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken')))]",
        "adPDCConfigurationFunction":"CreateADPDC.ps1\\CreateADPDC"
    },
    "resources": [
        {
            "name": "[concat('nsg-',variables('vNet_Name'))]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vNet_Name')]",
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2020-05-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-',variables('vNet_Name')))]"
                ],
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[variables('vnet_addressSpace')]"
                },
                "subnets": [
                    {
                        "name": "[variables('Subnet_ad_Name')]",
                        "properties": {
                            "addressPrefix": "[variables('Subnet_ad_addressRange')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-',variables('Subnet_ad_Name')))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "name": "[toLower(parameters('StorageAcc'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Storage Account"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "name": "[concat('pip-',variables('VM_Primary_DC_VM_Name'))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('VM_Primary_DC_VM_Name'))]"
                }
            }
        },
        {
            "name": "[concat('vNic-',variables('VM_Primary_DC_VM_Name'))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-',variables('VM_Primary_DC_VM_Name')))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet_Name'), variables('Subnet_ad_Name'))]"
            ],
            "tags": {
                "displayName": "windowsVM1 Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-',variables('VM_Primary_DC_VM_Name')))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet_Name'), variables('Subnet_AD_Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('VM_Primary_DC_VM_Name')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('StorageAcc')))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('vNic-',variables('VM_Primary_DC_VM_Name')))]"
            ],
            "tags": {
                "displayName": "[variables('VM_Primary_DC_VM_Name')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('VM_Primary_DC_VM_Name')]",
                    "adminUsername": "[parameters('adminUser')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name":  "[concat('vDisk-', variables('VM_Primary_DC_VM_Name'))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "diskSizeGB": 127
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('vNic-',variables('VM_Primary_DC_VM_Name')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(parameters('StorageAcc')))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources" : [
            {
                    "name": "CreateADForest",
                    "type": "extensions",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VM_Primary_DC_VM_Name'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[variables('adPDCModulesURL')]",
                            "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
                            "Properties": {
                                "DomainName": "[variables('domain_Name')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUser')]",
                                    "Password": "[parameters('adminPassword')]"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        }
    ]
}